# Copyright (C) 2024 - present Juergen Zimmermann, Hochschule Karlsruhe
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# Aufruf:   docker compose up
#             Prometheus: http://localhost:9090
#             Grafana:    http://localhost:3000
#             docker compose exec prometheus ash
#             docker compose exec grafana bash
#           docker compose down

services:
  
  loki:
    image: grafana/loki
    ports:
      - published: 3100
        target: 3100
    volumes:
      - type: bind
        source: ./loki-config.yaml
        target: /etc/loki/local-config.yaml
        read_only: true
    command: -config.file=/etc/loki/local-config.yaml
    container_name: loki
  
  tempo:
    image: grafana/tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - type: bind
        source: ./tempo.yaml
        target: /etc/tempo.yaml
        read_only: true
    ports:
      - published: 3200
        target: 3200
      - published: 4318
        target: 4318
    container_name: tempo
  
  prometheus:
    image: prom/prometheus:v2.50.1
    ports:
      - published: 9090
        target: 9090
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./prometheus.yml
        target: /etc/prometheus/prometheus.yml
        read_only: true
      - type: bind
        source: ./prometheus-data
        target: /prometheus
      - type: bind
        source: ../../../config/resources/tls/certificate.crt
        target: /etc/prometheus/certificate.crt
        read_only: true
    container_name: prometheus

  grafana:
    depends_on:
      - prometheus
      - tempo
    image: grafana/grafana:10.3.3
    ports:
      - published: 7600
        target: 3000
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./grafana-datasources
        target: /etc/grafana/provisioning/datasources
        read_only: true
      - type: bind
        # SQLite-Datenbank mit z.B. der Tabelle "dashboard"
        source: ./grafana.db
        target: /var/lib/grafana/grafana.db
    environment:
      # https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-authentication/grafana
      # default: admin / admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    container_name: grafana
